A string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).

Given a string s, return the longest happy prefix of s. Return an empty string "" if no such prefix exists.

 

Example 1:

Input: s = "level"
Output: "l"
Explanation: s contains 4 prefix excluding itself ("l", "le", "lev", "leve"), and suffix ("l", "el", "vel", "evel"). The largest prefix which is also suffix is given by "l".
Example 2:

Input: s = "ababab"
Output: "abab"
Explanation: "abab" is the largest prefix which is also suffix. They can overlap in the original string.

Solution:
class Solution {
public:
    string longestPrefix(string s) {

        int n=s.length();
        int p=31;
        long pow=1;
        long ps=0;
        long ss=0;
        long mod=1e9+7;
        if(n==1)
        {
            return "";
        }
        int ans=0;
        for(int i=0;i<n-1;i++)
        {   ps=((ps*p)+ (s[i]-'a'+1))%mod;
            ss=(ss+((s[n-i-1]-'a'+1)*pow)%mod)%mod;
            
            pow=(pow*p)%mod;
            if(ps==ss) ans=i+1;
        }
        return s.substr(0,ans);
    }
};
